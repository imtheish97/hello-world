pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "ishtest"
        K8S_NAMESPACE = "dev"
        // K8S_DEPLOYMENT = "your-deployment"
        CLOUDSDK_CORE_PROJECT = 'lloyds-interview'
        CLIENT_EMAIL = 'jenkins-service-account@lloyds-interview.iam.gserviceaccount.com'
        GCLOUD_PATH = '/Users/ismaelonilearan/Downloads/google-cloud-sdk/bin'
        TERRAFORM_PATH = '/opt/homebrew/bin'
        KUBECTL_PATH = "${HOME}/.kube"
        // ZSHRC_PATH = "${env.HOME}/.zshrc"
        PATH = "${env.PATH}:${GCLOUD_PATH}:${TERRAFORM_PATH}:${KUBECTL_PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('GCloud Auth') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'gcloud-creds', variable: 'GCLOUDCREDS')]) {
                        sh '''
                            gcloud version
                            gcloud auth activate-service-account --key-file="$GCLOUDCREDS"
                            gcloud compute zones list
                        '''
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh '''
                    docker build -t ${DOCKER_IMAGE}:\${BUILD_ID} .
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh """
                    source "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
                    source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"
                    kubectl config use-context your-kube-context
                    kustomize edit set image ${DOCKER_IMAGE}:${env.BUILD_ID}
                    kubectl apply -k ./k8s/overlays/${K8S_NAMESPACE}
                    """
                }
            }
        }
    }
}
